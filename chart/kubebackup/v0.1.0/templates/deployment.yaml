apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kubebackup.fullname" . }}
  labels:
    app: "{{ template "kubebackup.fullname" . }}"
    chart: "{{ template "kubebackup.chart" . }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  selector:
    matchLabels:
      app: "{{ template "kubebackup.fullname" . }}"
      release: {{ .Release.Name | quote }}
  {{- if .Values.updateStrategy }}
  strategy: {{ toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: "{{ template "kubebackup.fullname" . }}"
        chart: "{{ template "kubebackup.chart" . }}"
        release: {{ .Release.Name | quote }}
{{- if or .Values.podAnnotations .Values.metrics.enabled }}
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metrics.podAnnotations }}
{{ toYaml .Values.metrics.podAnnotations | indent 8 }}
{{- end }}
{{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
{{- include "kubebackup.imagePullSecrets" . | indent 6 }}
      containers:
      - name: kubebackup
        image: {{ template "kubebackup.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: cron_schedule
          value: {{ .Values.cron_schedule | quote }}
        - name: BUCKET
          value: {{ .Values.bucket_name | quote }}
        - name: REGION
          value: {{ .Values.region | quote }}
        - name: access_key
          value: {{ .Values.access_key | quote }}
        - name: secret_key
          valueFrom:
            secretKeyRef:
              name: {{ template "kubebackup.fullname" . }}
              key: secret_key
        - name: folder
          value: {{ .Values.folder | quote }}
        - name: endpoint
          value: {{ .Values.endpoint | quote }}
        volumeMounts:
        - mountPath: /mnt/backup
          name: kubebackup-data
          subPath: kubebackup
      volumes:
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "kubebackup.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{ end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
